#!/usr/bin/env node
var fs = require('fs');
var bem_xjst = require('../');

require('coa').Cmd()
    .name(process.argv[1])
    .helpful()
    .opt()
        .name('version')
        .title('Version')
        .short('v')
        .long('version')
        .only()
        .flag()
        .act(function(opts) {
            // return message as result of action
            var package = fs.readFileSync(__dirname +
                                                     '/../package.json');
            return JSON.parse(package).version;
        })
        .end()
    .opt()
        .name('input').title('File with user templates (default: stdin)')
        .short('i').long('input')
        .input()
        .end()
    .opt()
        .name('output').title('Output bundle file (default: stdout)')
        .short('o').long('output')
        .output()
        .end()
    .opt()
        .name('engine').title('Engine name (default: bemhtml, supported: bemhtml | bemtree)')
        .short('e').long('engine')
        .def('bemhtml')
        .end()
    .opt()
        .name('sourcemap').title('Generate source map (default: false)')
        .short('s').long('sourcemap')
        .def(false)
        .flag()
        .end()
    .act(function(options) {
      return new Promise(function(resolve) {
        var input = [];

        options.input.on('data', function(chunk) {
          input.push(chunk);
        });

        options.input.once('end', function() {
          finish(input.join(''));
        });

        options.input.resume();

        function finish(source) {
          var out = bem_xjst[options.engine].generate(source, {
              'no-opt': options['no-opt'],
              from: options.input.path,
              to: options.output.path,
              sourceMap: options.sourceMap
          });

          options.output.write(out);

          if (options.output === process.stdout) {
            options.output.write('\n');
          } else {
            options.output.end();
          }

          resolve();
        }
      });
    })
    .run();
